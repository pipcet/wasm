name: WASM32
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
jobs:
  binutils:
    name: Binutils
    runs-on: ubuntu-latest
    steps:
    - name: install texinfo, bison, flex
      run: sudo apt-get install texinfo bison flex
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: build binutils
      run: make -kj5 build/wasm32/binutils-gdb.make
    - name: Create artifact
      run: tar cf wasm32-unknown-none-binutils.tar wasm32-unknown-none
    - name: Upload artifact
      uses: actions/upload-artifact@v1
      with:
        name: wasm32-unknown-none-binutils.tar
        path: wasm32-unknown-none-binutils.tar
  gcc-preliminary:
    name: GCC (preliminary)
    runs-on: ubuntu-latest
    needs: binutils
    steps:
    - name: install texinfo, bison, flex
      run: sudo apt-get install texinfo bison flex
    - name: install GCC dependencies
      run: sudo apt-get install libgmp-dev libmpfr-dev libmpc-dev
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: Download artifact
      uses: actions/download-artifact@v1
      with:
        name: wasm32-unknown-none-binutils.tar
    - name: Unpack
      run: tar xf wasm32-unknown-none-binutils.tar/wasm32-unknown-none-binutils.tar
    - name: build preliminary GCC
      run: make -kj5 build/wasm32/gcc-preliminary.make
    - name: Create artifact
      run: tar cf wasm32-unknown-none-gcc-preliminary.tar wasm32-unknown-none
    - name: Upload artifact
      uses: actions/upload-artifact@v1
      with:
        name: wasm32-unknown-none-gcc-preliminary.tar
        path: wasm32-unknown-none-gcc-preliminary.tar
  glibc:
    name: glibc
    runs-on: ubuntu-latest
    needs: gcc-preliminary
    steps:
    - name: install texinfo, bison, flex
      run: sudo apt-get install texinfo bison flex
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: Download artifact
      uses: actions/download-artifact@v1
      with:
        name: wasm32-unknown-none-gcc-preliminary.tar
    - name: Unpack
      run: tar xf wasm32-unknown-none-gcc-preliminary.tar/wasm32-unknown-none-gcc-preliminary.tar
    - name: build glibc
      run: make -kj5 build/wasm32/glibc.make
    - name: Create artifact
      run: tar cf wasm32-unknown-none-glibc.tar wasm32-unknown-none
    - name: Upload artifact
      uses: actions/upload-artifact@v1
      with:
        name: wasm32-unknown-none-glibc.tar
        path: wasm32-unknown-none-glibc.tar
    - name: Generate WASM modules
      run: make wasm/ld.wasm wasm/libc.wasm
    - name: Upload ld.wasm
      uses: actions/upload-artifact@v1
      with:
        name: ld.wasm
        path: wasm/ld.wasm
    - name: Upload libc.wasm
      uses: actions/upload-artifact@v1
      with:
        name: libc.wasm
        path: wasm/libc.wasm
  gcc:
    name: GCC (final)
    runs-on: ubuntu-latest
    needs: glibc
    steps:
    - name: install texinfo, bison, flex
      run: sudo apt-get install texinfo bison flex
    - name: install GCC dependencies
      run: sudo apt-get install libgmp-dev libmpfr-dev libmpc-dev
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: Download artifact
      uses: actions/download-artifact@v1
      with:
        name: wasm32-unknown-none-glibc.tar
    - name: Unpack
      run: tar xf wasm32-unknown-none-glibc.tar/wasm32-unknown-none-glibc.tar
    - name: build final GCC
      run: make -kj5 build/wasm32/gcc.make
    - name: Create artifact
      run: tar cf wasm32-unknown-none-gcc.tar wasm32-unknown-none
    - name: Upload artifact
      uses: actions/upload-artifact@v1
      with:
        name: wasm32-unknown-none-gcc.tar
        path: wasm32-unknown-none-gcc.tar
  ncurses:
    name: ncurses
    runs-on: ubuntu-latest
    needs: gcc
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: Download artifact
      uses: actions/download-artifact@v1
      with:
        name: wasm32-unknown-none-gcc.tar
    - name: Unpack
      run: tar xf wasm32-unknown-none-gcc.tar/wasm32-unknown-none-gcc.tar
    - name: build ncurses
      run: make -kj5 build/wasm32/ncurses.make
    - name: Create artifact
      run: tar cf wasm32-unknown-none-ncurses.tar wasm32-unknown-none
    - name: Upload artifact
      uses: actions/upload-artifact@v1
      with:
        name: wasm32-unknown-none-ncurses.tar
        path: wasm32-unknown-none-ncurses.tar
  wasm32-js:
    name: wasm32.js script
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: Build wasm32.js
      run: make js/wasm32.js
    - name: Upload artifact
      uses: actions/upload-artifact@v1
      with:
        name: wasm32.js
        path: js/wasm32.js
  _001-hello-world-o:
    name: Hello World (assemble)
    runs-on: ubuntu-latest
    needs: binutils
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: Download artifact
      uses: actions/download-artifact@v1
      with:
        name: wasm32-unknown-none-binutils.tar
    - name: Unpack
      run: tar xf wasm32-unknown-none-binutils.tar/wasm32-unknown-none-binutils.tar
    - name: Assemble
      run: ./wasm32-unknown-none/bin/wasm32-unknown-none-as -Iwasm32-unknown-none/lib/gcc/wasm32-unknown-none/11.0.0/gas-macros/ -c -o 001-hello-world.o tests/001-hello-world/hello-world.S
    - name: Upload artifact
      uses: actions/upload-artifact@v1
      with:
        name: 001-hello-world.o
        path: 001-hello-world.o
  _003-hello-world-exe:
    name: Hello World (final C version)
    runs-on: ubuntu-latest
    needs: gcc
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: Download artifact
      uses: actions/download-artifact@v1
      with:
        name: wasm32-unknown-none-gcc.tar
    - name: Unpack
      run: tar xf wasm32-unknown-none-gcc.tar/wasm32-unknown-none-gcc.tar
    - name: Compile
      run: ./wasm32-unknown-none/bin/wasm32-unknown-none-gcc ./tests/003-hello-world/hello-world.c -o 003-hello-world.exe
    - name: Upload artifact
      uses: actions/upload-artifact@v1
      with:
        name: 003-hello-world.exe
        path: 003-hello-world.exe
  jsshell:
    name: jsshell
    runs-on: ubuntu-latest
    steps:
    - name: Download
      run: wget http://ftp.mozilla.org/pub/firefox/nightly/latest-mozilla-central/jsshell-linux-x86_64.zip
    - name: Upload artifact
      uses: actions/upload-artifact@v1
      with:
        name: jsshell-linux-x86_64.zip
        path: jsshell-linux-x86_64.zip
  _001-hello-world-run:
    name: Hello World (run)
    runs-on: ubuntu-latest
    needs:
      - _001-hello-world-wasm
      - jsshell
      - wasm32-js
    steps:
      - name: Download jsshell artifact
        uses: actions/download-artifact@v1
	with:
	  name: jsshell-linux-x86_64.zip
      - name: Unpack jsshell
        run: unzip jsshell-linux-x86_64.zip/jsshell-linux-x86_64.zip -d bin
      - name: Download wasm32.js artifact
        uses: actions/download-artifact@v1
	with:
	  name: wasm32.js
      - name: Unpack wasm32
        run: cp wasm32.js/wasm32.js js/wasm32.js
      - name: Download hello-world.wasm artifact
        uses: actions/download-artifact@v1
	with:
	  name: hello-world.wasm
      - name: Run
        run: ./bin/js ./js/wasm32.js ./hello-world.wasm/hello-world.wasm

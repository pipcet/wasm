#!/bin/bash
set -o pipefail
set -o errexit
TMPD=$(mktemp -d --tmpdir wasmify.XXXXXXXXXX);
TYPE=executable
DYNAMIC=unknown
OUTPUT=
while true; do
    if [ x"$1" = x"--library" ]; then
	TYPE=library
	shift
    elif [ x"$1" = x"--executable" ]; then
	TYPE=executable
	shift;
    elif [ x"$1" = x"--static" ]; then
	DYNAMIC=
	shift
    elif [ x"$1" = x"--dynamic" ]; then
	DYNAMIC=1
	shift
    elif [ x"$1" = x"--output" ]; then
	shift
	OUTPUT="$1"
	shift
    else
	break
    fi
done
if [ x"$WASMDIR" = x ]; then
    WASMDIR=.
    export WASMDIR
fi
if [ x"$DYNAMIC" = xunknown ]; then
    if $WASMDIR/wasm32/cross/bin/wasm32-unknown-none-readelf -d "$1" | grep -q "There is no dynamic section"; then
	DYNAMIC=
    else
	DYNAMIC=1;
    fi
fi
if [ x"$DELAY" = x ]; then
    DELAY=1
fi
cp "$1" $TMPD/elf
chmod u+rw $TMPD/elf
if [ x"$DYNAMIC" = x1 ]; then
    $WASMDIR/wasm32/cross/bin/dyninfo $TMPD/elf > $TMPD/dyninfo.json
else
    echo "{}" > $TMPD/dyninfo.json
fi
$WASMDIR/wasm32/cross/bin/wasm32-unknown-none-elfedit $TMPD/elf --output-type=rel
if [ x"$TYPE" = xLIBRARY ]; then
    $WASMDIR/wasm32/cross/bin/wasm32-unknown-none-objcopy --remove-relocations=.data --remove-relocations=.got -R .dynamic -R .dynsym -R .dynstr -R .rela.dyn -R .got.plt $TMPD/elf $TMPD/elf2
    $WASMDIR/wasm32/cross/bin/wasm32-unknown-none-elfedit $TMPD/elf2 --output-type=rel
    $WASMDIR/wasm32/cross/bin/wasm32-unknown-none-objcopy --remove-relocations=.got --remove-relocations=.data -R .dynamic -R .dynsym -R .dynstr -R .rela.dyn -R .got.plt $TMPD/elf2 $TMPD/elf3
else
    cp $TMPD/elf $TMPD/elf3
fi
$WASMDIR/wasm32/cross/bin/wasm32-unknown-none-ld -nostdlib -Map $TMPD/map1 -T $WASMDIR/wasm32/cross/lib/wasm32-lds/wasm32.lds $TMPD/elf3 -o $TMPD/intermediate -N --warn-unresolved-symbols --no-check-sections 2>/dev/null
$WASMDIR/wasm32/cross/bin/wasm32-unknown-none-ld -Map $TMPD/map2 -E -T $WASMDIR/wasm32/cross/lib/wasm32-lds/wasm32-wasmify.lds $TMPD/intermediate -o $TMPD/longwasm 2> /dev/null
$WASMDIR/wasm32/cross/bin/wasmrewrite $TMPD/longwasm > $TMPD/wasm
$WASMDIR/wasm32/cross/bin/wasmsect $TMPD/dyninfo.json > $TMPD/dyninfo.json.wass
cat $TMPD/dyninfo.json.wass >> $TMPD/wasm
chmod u+x $TMPD/wasm
if [ -z "$OUTPUT" ]; then
    cat $TMPD/wasm;
else
    cp -a $TMPD/wasm $OUTPUT
fi
rm -rf $TMPD
